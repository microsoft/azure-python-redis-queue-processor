{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant Id for the subscription and use assigned access to the vault. Available from the Get-AzureRMSubscription PowerShell cmdlet"
            }
        },
        "accessPolicies": {
            "type": "array",
            "defaultValue": "{}",
            "metadata": {
                "description": "Access policies object {\"tenantId\":\"\",\"objectId\":\"\",\"permissions\":{\"keys\":[\"\"],\"secrets\":[\"\"]}}"
            }
        },
        "vaultSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "SKU for the vault"
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for ARM template deployment"
            }
        },
        "enableVaultForVolumeEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for volume encryption"
            }
        },
        "secretsObject": {
            "type": "secureObject",
            "defaultValue": "{}",
            "metadata": {
                "description": "all secrets {\"secretName\":\"\",\"secretValue\":\"\"} wrapped in a secure object"
            }
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "Size of VMs in the VM Scale Set."
            }
        },
        "centOSVersion": {
            "type": "string",
            "defaultValue": "7.4",
            "allowedValues": [
                "6.8",
                "7.3",
                "7.4"
            ]
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of VM instances (100 or less)."
            },
            "maxValue": 100
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage account where deployment resources are stored."
            }
        },
        "storageAccountKey": {
            "type": "securestring",
            "metadata": {
                "description": "Storage account key where deployment resources are stored."
            }
        },
        "vmCustomData": {
            "type": "securestring",
            "metadata": {
              "description": "String passed down to the Virtual Machine."
            }
        },
        "workerBoostrapFiles": {
            "type": "array",
            "metadata": {
                "description": "List of blob files that are needed to boostrap the worker nodes."
            }
        },
        "schedulerBootstrapFiles": {
            "type": "array",
            "metadata": {
                "description": "List of blob files that are needed to boostrap the scheduler nodes."
            }
        },
        "sshKeyData": {
            "type": "securestring",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "encryptedDataFileBlobName": {
            "type": "string",
            "defaultValue": "data.encrypted",
            "metadata": {
                "description": "The blob name for the encrypted data file to process"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sa')]",
        "keyVaultName": "[concat('kv', uniquestring(resourceGroup().id))]",
        "domainNameLabel": "[concat('dn', uniquestring(resourceGroup().id))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('schedulerSubnetName'))]",
        "publicIPAddressName": "jumpboxPublicIp",
        "jumpBoxName": "jbox",
        "jumpBoxSAName": "[concat(uniquestring(resourceGroup().id), 'jbox')]",
        "jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), 'osdisk')]",
        "jumpBoxVHDContainerName": "[concat(variables('jumpBoxName'), 'vhd')]",
        "jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), 'ipconfig')]",
        "jumpBoxNicName": "[concat(variables('jumpBoxName'), 'nic')]",
        "osType": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "[parameters('centOSVersion')]",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]",
        "virtualNetworkName": "vnet",
        "addressPrefix": "10.0.0.0/16",
        "redisName": "redisvm",
        "redisOSDiskName": "[concat(variables('redisName'), 'osdisk')]",
        "redisVHDContainerName": "[concat(variables('redisName'), 'vhd')]",
        "redisIPConfigName": "[concat(variables('redisName'), 'ipconfig')]",
        "redisNicName": "[concat(variables('redisName'), 'nic')]",
        "redisSetupScriptName": "install_redis.sh",
        "redisSetupScriptUrl": "[concat('https://gist.githubusercontent.com/ali92hm/ff750eb1bee80338e0b05170ff2d4531/raw/95fa19a83b387f82b09826f094916c4d02c55793/',variables('redisSetupScriptName'))]",
        "redisSetupScriptCommand": "[concat('bash ', variables('redisSetupScriptName'))]",
        "redisNicIpAddress": "10.0.1.40",
        "workerSubnetName": "workerSubnet",
        "workerSubnetPrefix": "10.0.2.0/24",
        "workerVmssName": "workerVmss",
        "workerNicName": "[concat(variables('workerVmssName'), 'nic')]",
        "workerIpConfigName": "[concat(variables('workerVmssName'), 'ipconfig')]",
        "schedulerSubnetName": "schedulerSubnet",
        "schedulerSubnetPrefix": "10.0.1.0/24",
        "schedulerVmssName": "schedulerVmss",
        "schedulerNicName": "[concat(variables('schedulerVmssName'), 'nic')]",
        "schedulerIpConfigName": "[concat(variables('schedulerVmssName'), 'ipconfig')]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('jumpBoxSAName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "KeyVault"
            },
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForVolumeEncryption": "[parameters('enableVaultForVolumeEncryption')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": "[parameters('accessPolicies')]",
                "sku": {
                    "name": "[parameters('vaultSku')]",
                    "family": "A"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', parameters('secretsObject').secrets[copyIndex()].secretName)]",
            "apiVersion": "2015-06-01",
            "properties": {
                "value": "[parameters('secretsObject').secrets[copyIndex()].secretValue]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ],
            "copy": {
                "name": "secretsCopy",
                "count": "[length(parameters('secretsObject').secrets)]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-06-01",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('schedulerSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('schedulerSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('workerSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('workerSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-04-01",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('domainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('jumpBoxNicName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-04-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('jumpBoxIPConfigName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('redisNicName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-04-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('redisIPConfigName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('redisNicIpAddress')]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('jumpBoxName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSku')]"
                },
                "osProfile": {
                    "computerName": "[variables('jumpBoxName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "ssh": {
                            "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[parameters('sshKeyData')]"
                            }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[variables('jumpBoxOSDiskName')]",
                        "vhd": {
                            "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/',variables('jumpBoxOSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('redisName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('redisNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSku')]"
                },
                "osProfile": {
                    "computerName": "[variables('redisName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "ssh": {
                            "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[parameters('sshKeyData')]"
                            }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[variables('redisOSDiskName')]",
                        "vhd": {
                            "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('redisVHDContainerName'),'/',variables('redisOSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('redisNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net')]"
                    }
                }
            },
            "resources": [
                {
                    "name": "redissetup",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-06-15",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('redisName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                            "[variables('redisSetupScriptUrl')]"
                        ],
                        "commandToExecute": "[variables('redisSetupScriptCommand')]"
                      }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('schedulerVmssName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('redisName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "1"
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage"
                        },
                        "imageReference": "[variables('imageReference')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('schedulerVmssName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "customData": "[parameters('vmCustomData')]",
                        "linuxConfiguration": {
                            "ssh": {
                                "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                                ]
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('schedulerNicName')]",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('schedulerIpConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('schedulerSubnetName'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "CustomScriptExtension",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": "[parameters('schedulerBootstrapFiles')]"
                                    },
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('./scheduler_bootstrap.sh ', parameters('encryptedDataFileBlobName'), ' ', variables('redisNicIpAddress'), ' &')]",
                                        "storageAccountName": "[parameters('storageAccountName')]",
                                        "storageAccountKey": "[parameters('storageAccountKey')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('workerVmssName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('redisName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage"
                        },
                        "imageReference": "[variables('imageReference')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('workerVmssName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "customData": "[parameters('vmCustomData')]",
                        "linuxConfiguration": {
                            "ssh": {
                                "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                                ]
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('workerNicName')]",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('workerIpConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('workerSubnetName'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "CustomScriptExtension",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": "[parameters('workerBoostrapFiles')]"
                                    },
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('./processor_bootstrap.sh ', variables('redisNicIpAddress'), ' &')]",
                                        "storageAccountName": "[parameters('storageAccountName')]",
                                        "storageAccountKey": "[parameters('storageAccountKey')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}
